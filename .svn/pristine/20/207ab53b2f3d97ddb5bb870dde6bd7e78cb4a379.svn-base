package com.example.caretakermobile;

import org.json.JSONObject;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.android.volley.Request.Method;
import com.android.volley.RequestQueue;
import com.android.volley.VolleyError;
import com.example.caretakermobile.interfaces.ParserError;
import com.example.caretakermobile.model.BeanController;
import com.example.caretakermobile.model.LoginBean;
import com.example.caretakermobile.network.CustomRequest;
import com.example.caretakermobile.network.QueryHelper;
import com.example.caretakermobile.util.AppLog;

import java.util.Map;

public class LoginActivity extends BaseActivity 
{

	private Button mLoginButton;
	private EditText mEtUserName;
	private EditText mEtPassword;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		mEtUserName = (EditText)findViewById(R.id.email);
		mEtPassword = (EditText)findViewById(R.id.password);
		mLoginButton = (Button)findViewById(R.id.btn_login);

		mLoginButton.setOnClickListener(new View.OnClickListener() 
		{
			@Override
			public void onClick(View arg0) 
			{
				//				HashMap<String, String> postParam = new HashMap<String, String>();
				//				VolleyController volleyController = new VolleyController(LoginActivity.this, LoginActivity.this, "");
				//				volleyController.prepareQueryForRequest("http://echo.jsontest.com/key/value/one/two", null , Request.Method.GET);
				//				volleyController.makeRequest("", 0, false);
				// send login request

				//				JsonObjectRequest jsObjRequest = new JsonObjectRequest(Method.GET, Constants.URL_WEB_SERVICE, null, LoginActivity.this, LoginActivity.this);  
				//				queue.add(jsObjRequest);
				String username = mEtUserName.getText().toString();
				String password = mEtPassword.getText().toString();
				// Create List of BasicNameValuePairs
				RequestQueue queue = MyVolley.getRequestQueue();
				Map<String, String> loginParam = QueryHelper.createLoginQuery(username, password);
				CustomRequest customRequest = new CustomRequest(Method.POST, Constants.URL_WEB_SERVICE, loginParam, LoginActivity.this, LoginActivity.this);
				queue.add(customRequest);
			}
		});
	}

	@Override
	protected void onStart() {
		// TODO Auto-generated method stub
		super.onStart();
	}

	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
	}

	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		super.onPause();
	}

	@Override
	protected void onStop() {
		// TODO Auto-generated method stub
		super.onStop();
	}

	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
	}

	public void onResponseReceived(Object responseData, int fetchingType) {
		Toast.makeText(this, responseData.toString()+ fetchingType, Toast.LENGTH_SHORT).show();
	}

	@Override
	public void onResponse(JSONObject response) {
		int code = Integer.parseInt(response.optString("code"));
		String msg = response.optString("message");
		Intent intent;
		switch (code) {
		case ParserError.CODE_ACTION_NOT_FOUND:

			break;
		case ParserError.CODE_MISSING_ACTION:

			break;
		case ParserError.CODE_MISSING_TASK:

			break;
		case ParserError.CODE_CLIENT_AUTHORIZATION_FAILED:

			break;
		case ParserError.CODE_TOKEN_GENERATION_FAILED:

			break;
		case ParserError.CODE_USERNAME_REQUIRED:

			break;
		case ParserError.CODE_PASSWORD_REQUIRED:

			break;
		case ParserError.CODE_PASSWORD_WRONG:

			break;
		case ParserError.CODE_USER_NOT_REGISTERED:
			intent = new Intent(getApplicationContext(),
					RegistrationActivity.class);
			startActivity(intent);
			break;
		case ParserError.CODE_INVALID_TOKEN:

			break;
		case ParserError.CODE_TOKEN_EXPIRED:

			break;
		case ParserError.CODE_INTERNAL_SERVER_ERROR:

			break;
		case ParserError.CODE_USER_ALREADY_REGISTERED:

			break;
		case ParserError.CODE_SUCCESS:
			LoginBean login = BeanController.getLoginBean();
			login.populateBean(response);
			Toast.makeText(this, response.toString(), Toast.LENGTH_SHORT).show();
			// on success , call Home screen
			intent = new Intent(getApplicationContext(),
					HomeActivity.class);
			startActivity(intent);
			break;

		default:
			break;
		}
		
		if(code != ParserError.CODE_SUCCESS) {
			AppLog.showToast(this, "error web service response code - "+code);
		}
	}

	@Override
	public void onErrorResponse(VolleyError error) {
		Toast.makeText(this, error.toString(), Toast.LENGTH_SHORT).show();
	}
}
